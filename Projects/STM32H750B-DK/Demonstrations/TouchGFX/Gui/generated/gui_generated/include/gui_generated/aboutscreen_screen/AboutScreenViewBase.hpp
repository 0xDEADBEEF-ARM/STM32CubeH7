/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef ABOUTSCREEN_VIEW_BASE_HPP
#define ABOUTSCREEN_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/aboutscreen_screen/AboutScreenPresenter.hpp>
#include <touchgfx/containers/ScrollableContainer.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/scrollers/ScrollWheelWithSelectionStyle.hpp>
#include <gui/containers/AboutWheelElement.hpp>

#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/FadeAnimator.hpp>
class AboutScreenViewBase : public touchgfx::View<AboutScreenPresenter>
{
public:
    AboutScreenViewBase();
    virtual ~AboutScreenViewBase() {}

    virtual void setupScreen();

    virtual void designerAboutScrollWheelUpdateItem(AboutWheelElement& item, int16_t itemIndex)
    {
        // Override and implement this function in AboutScreen
    }

    virtual void designerAboutScrollWheelUpdateCenterItem(AboutWheelElement& item, int16_t itemIndex)
    {
        // Override and implement this function in AboutScreen
    }

    /*
     * Custom Action Handlers
     */
    virtual void playAboutVideo()
    {
        // Override and implement this function in AboutScreenView
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::ScrollableContainer scrollableContainerAbout;
    touchgfx::Box backgroundBox;
    touchgfx::Image backgroudImage;
    touchgfx::Button buttonHallway;
    touchgfx::Image imageST;
    touchgfx::Image imageMjolner;
    touchgfx::TextArea textAreaSubHeadline;
    touchgfx::Box boxVideoSeperator2;
    touchgfx::Box boxVideoSeperator1;
    touchgfx::Image imageVideoBackground;
    touchgfx::Image imageLaptopCreative;
    touchgfx::FadeAnimator< touchgfx::Button > buttonPlayVideo;
    touchgfx::Image imageLaptopRocket;
    touchgfx::Image imageLaptopMjolner;
    touchgfx::Image imageArrow;
    touchgfx::TextArea textAreaScreenHeadline;
    touchgfx::TextArea textAreaST;
    touchgfx::TextArea textAreaMjolner;
    touchgfx::TextArea textAreaHyperlinkST1;
    touchgfx::TextArea textAreaHyperlinkMjolner1;
    touchgfx::TextArea textAreaMore;
    touchgfx::TextArea textAreaVideoHeadline;
    touchgfx::Image imageSliderBg;
    touchgfx::TextArea textAreaVideoSubHeadline;
    touchgfx::TextArea textAreaGetStartedHeadline;
    touchgfx::TextArea textAreaGettingStarted;
    touchgfx::TextArea textAreaDesigerHead;
    touchgfx::TextArea textAreaDesigner1;
    touchgfx::TextArea textAreaDesigner2;
    touchgfx::ScrollWheelWithSelectionStyle designerAboutScrollWheel;
    touchgfx::DrawableListItems<AboutWheelElement, 4> designerAboutScrollWheelListItems;
    touchgfx::DrawableListItems<AboutWheelElement, 2> designerAboutScrollWheelSelectedListItems;

    touchgfx::Box boxSeperator1;
    touchgfx::FadeAnimator< touchgfx::TextArea > textAreaAboutInfo;
    touchgfx::TextArea textAreaGetStartedHead;
    touchgfx::TextArea textAreaGetStarted1;
    touchgfx::TextArea textAreaGetStarted2;
    touchgfx::Box boxSeperator2;
    touchgfx::TextArea textAreaGetAssistanceHead;
    touchgfx::TextArea textAreaAssistance;
    touchgfx::TextArea textAreaHyperlinkMjolner;
    touchgfx::FadeAnimator< touchgfx::TextArea > MissingUSBMessage;
    touchgfx::TextArea textAreaSTHyperlink;


private:

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void updateItemCallbackHandler(DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);

    /*
     * Callback Declarations
     */
    touchgfx::Callback<AboutScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<AboutScreenViewBase, DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;

};

#endif // ABOUTSCREEN_VIEW_BASE_HPP
