/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef WASHERSCREEN_VIEW_BASE_HPP
#define WASHERSCREEN_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/washerscreen_screen/WasherScreenPresenter.hpp>
#include <gui/containers/WasherContainer.hpp>
#include <gui/containers/WasherInstructionContainer.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>

class WasherScreenViewBase : public touchgfx::View<WasherScreenPresenter>
{
public:
    WasherScreenViewBase();
    virtual ~WasherScreenViewBase() {}

    virtual void setupScreen();

    /*
     * Custom Action Handlers
     */
    virtual void buttonInstructionsClicked()
    {
        // Override and implement this function in WasherScreenView
    }

    virtual void backButtonClicked()
    {
        // Override and implement this function in WasherScreenView
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(Application::getInstance());
    }

    /*
     * Member Declarations
     */
    WasherContainer washerContainer;
    WasherInstructionContainer washerInstructionContainer;
    touchgfx::Button buttonInstructions;
    touchgfx::Button buttonBack;
    touchgfx::Button buttonBath;

private:

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Callback Declarations
     */
    touchgfx::Callback<WasherScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 14000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

};

#endif // WASHERSCREEN_VIEW_BASE_HPP
